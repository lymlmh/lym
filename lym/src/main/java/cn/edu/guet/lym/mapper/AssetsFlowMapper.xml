<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.edu.guet.lym.mapper.AssetsFlowMapper">
	<resultMap type="cn.edu.guet.lym.domain.AssetsFlow" id="baseResult">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="assetsId" property="assetsId"/>
		<result column="applyer" property="applyer"/>
		<result column="applyTime" property="applyTime"/>
		<result column="auditer" property="auditer"/>
		<result column="auditTime" property="auditTime"/>
		<result column="audit" property="audit"/>
		<result column="newStatus" property="newStatus"/>
		<result column="auditStatus" property="auditStatus"/>
		<result column="deptid" property="deptid"/>
		<result column="empid" property="empid"/>
		<result column="applyername" property="applyername"/>
		<result column="oldStatus" property="oldStatus"/>
		<result column="reason" property="reason"/>
		<result column="place" property="place"/>
		
		<association property="fa" column="assetsId" javaType="FixedAssets" columnPrefix="fa_">
			<id column="id"  property="id"/>
    		<result column="name" property="name"/>
    		<result column="code" property="code"/>
    		<result column="type" property="type"/>
		</association>
	</resultMap>

	<sql id="baseColumn">
		id,assetsId,applyer,applyTime,auditer,auditTime,audit,newStatus,auditStatus,deptid,empid,oldStatus,reason,place
	</sql>
	
	<select id="selectByAssetsId" resultType="cn.edu.guet.lym.domain.AssetsFlow">
		select <include refid="baseColumn"/>
		from AssetsFlow
		where assetsId=#{assetsId}
		</select>
		
	<select id="selectDeptId" resultMap="baseResult" parameterType="java.lang.Integer">
		select flow.id,flow.assetsId,flow.applyer,flow.applyTime,flow.auditer,flow.auditStatus,flow.reason,
		flow.auditTime,flow.audit,flow.newStatus,fa.name as fa_name,fa.code as fa_code,fa.type as fa_type,e.name as applyername
		from AssetsFlow flow LEFT JOIN fixedAssets fa on flow.assetsId=fa.id left join employee e on flow.applyer=e.userid
        <where>
         AND fa.dept_id=#{deptid}
        </where>
       order by applyTime Desc
	</select> 
		
 	<select id="selectByapplyer" resultMap="baseResult" parameterType="java.lang.Integer">
		select flow.id,flow.assetsId,flow.applyer,flow.applyTime,flow.auditer,flow.auditStatus,flow.reason,
		flow.auditTime,flow.audit,flow.newStatus,fa.name as fa_name,fa.code as fa_code,fa.type as fa_type,e.name as applyername
		from AssetsFlow flow LEFT JOIN fixedAssets fa on flow.assetsId=fa.id left join employee e on flow.applyer=e.userid
        <where>
         AND flow.applyer=#{applyer}
        </where>
       order by applyTime Desc
	</select> 
	
	<select id="selectQueryFlow" resultMap="baseResult" parameterType="java.lang.Integer">
		select flow.id,flow.assetsId,flow.applyer,flow.applyTime,flow.auditer,flow.audit,flow.auditStatus,
		flow.auditTime,flow.audit,flow.newStatus,fa.name as fa_name,fa.code as fa_code,fa.type as fa_type,e.name as applyername
		from AssetsFlow flow LEFT JOIN fixedAssets fa on flow.assetsId=fa.id left join employee e on flow.applyer=e.userid
		<where>
			AND flow.audit=#{audit}
			<if test="auditStatus!=null">
				AND flow.auditStatus=#{auditStatus}
			</if> 
			
		</where>
		order by applyTime Desc
	</select>
	
	<select id="selectQueryFlow1" resultMap="baseResult" parameterType="java.lang.Integer">
		select flow.id,flow.assetsId,flow.applyer,flow.applyTime,flow.auditer,flow.audit,flow.auditStatus,
		flow.auditTime,flow.audit,flow.newStatus,fa.name as fa_name,fa.code as fa_code,fa.type as fa_type,e.name as applyername
		from AssetsFlow flow LEFT JOIN fixedAssets fa on flow.assetsId=fa.id left join employee e on flow.applyer=e.userid
		<where>
			AND flow.audit=#{audit}
			<if test="auditStatus!=null">
				AND flow.auditStatus!=#{auditStatus}
			</if> 
			
		</where>
		order by applyTime Desc
	</select>
	
	<select id="selectQueryFlow2" resultMap="baseResult" parameterType="java.lang.Integer">
		select flow.id,flow.assetsId,flow.applyer,flow.applyTime,flow.auditer,flow.audit,flow.auditStatus,
		flow.auditTime,flow.audit,flow.newStatus,fa.name as fa_name,fa.code as fa_code,fa.type as fa_type,e.name as applyername
		from AssetsFlow flow LEFT JOIN fixedAssets fa on flow.assetsId=fa.id left join employee e on flow.applyer=e.userid
		<where>
		    AND fa.dept_id=#{deptId}
		    <if test="audit!=null">
				AND flow.audit=#{audit}
			</if>
			
			
		</where>
		order by applyTime Desc
	</select>
	
	<select id="selectQueryFlow3" resultMap="baseResult" parameterType="java.lang.Integer">
		select flow.id,flow.assetsId,flow.applyer,flow.applyTime,flow.auditer,flow.audit,flow.auditStatus,
		flow.auditTime,flow.audit,flow.newStatus,fa.name as fa_name,fa.code as fa_code,fa.type as fa_type,e.name as applyername
		from AssetsFlow flow LEFT JOIN fixedAssets fa on flow.assetsId=fa.id left join employee e on flow.applyer=e.userid
		<where>
		    AND fa.dept_id=#{deptId}
			<if test="audit!=null">
				AND flow.audit!=#{audit}
			</if>
			
			
		</where>
		order by applyTime Desc
	</select>
	
	
	<select id="get" resultMap="baseResult">
		select <include refid="baseColumn"/>
		from AssetsFlow
		where id=#{id}
	</select>
	
	<insert id="save" parameterType="cn.edu.guet.lym.domain.AssetsFlow">
	insert into AssetsFlow(assetsId,applyer,applyTime,audit,auditer,newStatus,oldStatus,reason,auditStatus)
	values(#{assetsId},#{applyer},#{applyTime},#{audit},#{auditer},#{newStatus},#{oldStatus},#{reason},#{auditStatus})
	</insert>
	
	<insert id="save1" parameterType="cn.edu.guet.lym.domain.AssetsFlow">
	insert into AssetsFlow(assetsId,applyer,applyTime,audit,auditer,newStatus,deptid,empid,oldStatus,reason,auditStatus,place)
	values(#{assetsId},#{applyer},#{applyTime},#{audit},#{auditer},#{newStatus},#{deptid},#{empid},#{oldStatus},#{reason},#{auditStatus},#{place})
	</insert> 
	
	<update id="updateAudit" parameterType="cn.edu.guet.lym.domain.AssetsFlow">
		update AssetsFlow set
		audit=#{audit},
		auditer=#{auditer},
		auditTime=#{auditTime},
		auditStatus=#{auditStatus}
		where id=#{id}
	</update>
</mapper>